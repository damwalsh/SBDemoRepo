/**
 * Lib
 * Library setup
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.Authors
import io.swagger.client.model.Books
import io.swagger.client.model.InlineResponse200
import io.swagger.client.model.InlineResponse2001
import io.swagger.client.model.InlineResponse404
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object AllUsersApi {

  /**
   * Returns array based on author search params.
   * 
   * Expected answers:
   *   code 200 : Authors (book successfully created)
   *   code 404 : InlineResponse404 (server error)
   * 
   * @param firstName first name search parameter
   * @param lastName last name search parameter
   */
  def authorsGet(firstName: Option[String] = None, lastName: Option[String] = None): ApiRequest[Authors] =
    ApiRequest[Authors](ApiMethods.GET, "https://virtserver.swaggerhub.com/SmartBear_Software/sbLib/1.2.0", "/authors", "application/json")
      .withQueryParam("first_name", firstName)
      .withQueryParam("last_name", lastName)
      .withSuccessResponse[Authors](200)
      .withErrorResponse[InlineResponse404](404)
        /**
   * Query for a specific author by ID.
   * 
   * Expected answers:
   *   code 200 : InlineResponse2001 (search results matching criteria)
   *   code 404 : InlineResponse404 (server error)
   * 
   * @param id book id
   */
  def authorsIdGet(id: Int): ApiRequest[InlineResponse2001] =
    ApiRequest[InlineResponse2001](ApiMethods.GET, "https://virtserver.swaggerhub.com/SmartBear_Software/sbLib/1.2.0", "/authors/{id}", "application/json")
      .withPathParam("id", id)
      .withSuccessResponse[InlineResponse2001](200)
      .withErrorResponse[InlineResponse404](404)
        /**
   * Returns array based on book search params.
   * 
   * Expected answers:
   *   code 200 : Books (book successfully created)
   *   code 404 : InlineResponse404 (server error)
   * 
   * @param title title search parameter
   * @param author author search parameter
   */
  def booksGet(title: Option[String] = None, author: Option[String] = None): ApiRequest[Books] =
    ApiRequest[Books](ApiMethods.GET, "https://virtserver.swaggerhub.com/SmartBear_Software/sbLib/1.2.0", "/books", "application/json")
      .withQueryParam("title", title)
      .withQueryParam("author", author)
      .withSuccessResponse[Books](200)
      .withErrorResponse[InlineResponse404](404)
        /**
   * Returns array based of search params.
   * 
   * Expected answers:
   *   code 200 : InlineResponse200 (search results matching criteria)
   *   code 404 : InlineResponse404 (server error)
   * 
   * @param id book id
   */
  def booksIdGet(id: Int): ApiRequest[InlineResponse200] =
    ApiRequest[InlineResponse200](ApiMethods.GET, "https://virtserver.swaggerhub.com/SmartBear_Software/sbLib/1.2.0", "/books/{id}", "application/json")
      .withPathParam("id", id)
      .withSuccessResponse[InlineResponse200](200)
      .withErrorResponse[InlineResponse404](404)
        /**
   * Returns array based on book search params.
   * 
   * Expected answers:
   *   code 200 : Books (book successfully created)
   *   code 404 : InlineResponse404 (server error)
   * 
   * @param title title search parameter
   * @param author author search parameter
   */
  def subjectsGet(title: Option[String] = None, author: Option[String] = None): ApiRequest[Books] =
    ApiRequest[Books](ApiMethods.GET, "https://virtserver.swaggerhub.com/SmartBear_Software/sbLib/1.2.0", "/subjects", "application/json")
      .withQueryParam("title", title)
      .withQueryParam("author", author)
      .withSuccessResponse[Books](200)
      .withErrorResponse[InlineResponse404](404)
      

}

